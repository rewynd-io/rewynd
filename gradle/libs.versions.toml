[versions]
acra = "5.12.0"
activityCompose = "1.10.1"
agp = "8.9.1"
androidx-junit = "1.2.1"
androidx-paging = "3.3.6"
androidxLifecycle = "2.8.7"
androidxNavigation = "2.8.9"
annotation = "1.9.1"
appcompat = "1.7.0"
arrow = "2.0.1"
coil = "3.1.0"
composeDetekt = "0.4.22"
config = "1.4.3"
constraintlayoutCompose = "1.1.1"
coreKtx = "1.16.0"
detekt = "1.23.8"
dokka = "2.0.0"
espressoCore = "3.6.1"
exoplayer = "1.6.1"
expiringmap = "0.5.11"
exposed = "0.61.0"
gridlayout = "1.1.0"
hikari = "6.3.0"
jacksonDataformatXml = "2.18.3"
jacksonModuleKotlin = "2.18.3"
junit = "4.13.2"
kielbasa = "0.1.2"
kotest = "6.0.0.M3"
kotestExtensions = "2.0.0"
kotlin = "2.1.20"
kotlinLogging = "7.0.7"
kotlinx-kover = "0.9.1"
kotlinxCollectionsImmutable = "0.3.8"
kotlinxCoroutines = "1.10.2"
kotlinxDatetime = "0.6.2"
kotlinxSerialization = "1.8.1"
ktor = "3.1.2"
lettuce = "6.5.5.RELEASE"
log4j = "2.24.3"
logback = "1.5.18"
loggingInterceptor = "4.12.0"
luceneCore = "10.2.0"
margarita = "0.1.0"
material3 = "1.3.2"
materialIcons = "1.7.8"
mockk = "1.14.0"
nodeGradle = "7.1.0"
okio = "3.11.0"
openapi = "7.12.0"
postgres = "42.7.5"
preferenceVersion = "1.2.1"
quartz = "2.5.0"
runtimeLivedata = "1.7.8"
shadow = "8.3.6"
slf4j = "2.0.17"
sqlite = "3.49.1.0"

# Used for versions outside libraries/plugins
android-compileSdk = "35"
android-minSdk = "24"
compose = "1.6.11"
jvm = "21"
node = "22.3.0"

[libraries]
acra-dialog= { module = "ch.acra:acra-dialog", version.ref = "acra" }
acra-mail= { module = "ch.acra:acra-mail", version.ref = "acra" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-gridlayout = { module = "androidx.gridlayout:gridlayout", version.ref = "gridlayout" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIcons" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "exoplayer" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "exoplayer" }
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "exoplayer" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "exoplayer" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidx-paging" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidx-paging" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceVersion" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "runtimeLivedata" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
coil-base = {module = "io.coil-kt.coil3:coil-core", version.ref = "coil"}
coil-compose = {module = "io.coil-kt.coil3:coil-compose", version.ref = "coil"}
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "composeDetekt" }
detekt-formatting = {module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
expiringmap = { module = "net.jodah:expiringmap", version.ref = "expiringmap" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
hikari-cp = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jacksonDataformatXml" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jacksonModuleKotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
kielbasa-coroutines = { module = "net.kensand:kielbasa-coroutines", version.ref = "kielbasa" }
kielbasa-kotest-property = { module = "net.kensand:kielbasa-kotest-property", version.ref = "kielbasa" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-extensions-property-datetime = { module = "io.kotest.extensions:kotest-property-datetime", version.ref = "kotestExtensions" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlinLogging" }
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlin-stdlib-jdk7 = {module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin"}
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-okhttp-jvm = { module = "io.ktor:ktor-client-okhttp-jvm", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-call-id-jvm = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-cio-jvm = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-compression-jvm = { module = "io.ktor:ktor-server-compression-jvm", version.ref = "ktor" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-default-headers-jvm = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-server-host-common-jvm = { module = "io.ktor:ktor-server-host-common-jvm", version.ref = "ktor" }
ktor-server-metrics-jvm = { module = "io.ktor:ktor-server-metrics-jvm", version.ref = "ktor" }
ktor-server-partial-content-jvm = { module = "io.ktor:ktor-server-partial-content-jvm", version.ref = "ktor" }
ktor-server-sessions-jvm = { module = "io.ktor:ktor-server-sessions-jvm", version.ref = "ktor" }
ktor-server-status-pages-jvm = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
lucene-analysis-common = { module = "org.apache.lucene:lucene-analysis-common", version.ref = "luceneCore" }
lucene-analysis-icu = { module = "org.apache.lucene:lucene-analysis-icu", version.ref = "luceneCore" }
lucene-backward-codecs = { module = "org.apache.lucene:lucene-backward-codecs", version.ref = "luceneCore" }
lucene-core = { module = "org.apache.lucene:lucene-core", version.ref = "luceneCore" }
lucene-memory = { module = "org.apache.lucene:lucene-memory", version.ref = "luceneCore" }
lucene-queries = { module = "org.apache.lucene:lucene-queries", version.ref = "luceneCore" }
lucene-queryparser = { module = "org.apache.lucene:lucene-queryparser", version.ref = "luceneCore" }
lucene-suggest = { module = "org.apache.lucene:lucene-suggest", version.ref = "luceneCore" }
margarita = {module = "net.kensand:margarita", version.ref = "margarita"}
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
okio = {module = "com.squareup.okio:okio", version.ref = "okio" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
quartz = { module = "org.quartz-scheduler:quartz", version.ref = "quartz" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jdk14 = { module = "org.slf4j:slf4j-jdk14", version.ref = "slf4j" }
sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
typesafe-config = { module = "com.typesafe:config", version.ref = "config" }

[plugins]
android-app = { id = "com.android.application", version.ref = "agp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-android-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
node-gradle = { id = "com.github.node-gradle.node", version.ref = "nodeGradle" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }